---
- name: setup basic Delphi-BFT dependencies
  hosts: opennebula
  become: yes
  become_user: root
  tasks:
    - name: Installing Node, NVM and NPM
      block:
        - name: CURL nvm
          command: >
           bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash'
          args:
            creates: "$HOME/.nvm/nvm.sh"
            chdir: $HOME
        - name: Install Node
          command: >
            bash -c 'source $HOME/.nvm/nvm.sh && nvm install "{{node_version}}" && nvm use "{{node_version}}"'
          args:
            chdir: $HOME
      become: no 
    - name: Installing Phantom
      block:
        - name: Installing Phantom dependencies
          ansible.builtin.apt:
            pkg:
              - cmake 
              - findutils 
              - libc-dbg 
              - libglib2.0-0 
              - libglib2.0-dev 
              - make 
              - python3 
              - python3-pip 
              - xz-utils 
              - util-linux 
              - gcc 
              - g++
              - python3-numpy 
              - python3-lxml 
              - python3-matplotlib 
              - python3-networkx 
              - python3-scipy 
              - python3-yaml
              - dstat 
              - git 
              - htop 
              - tmux
            state: latest
        - name: Installing Rust
          command: bash -c "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
        - name: Cloning the Phantom repository and checking out tag v2.2.0
          ansible.builtin.git:
            repo: "{{ phantom_repo }}"
            dest: "{{ phantom_clone_dir }}"
            version: tags/"{{ phantom_version }}"
          become: no
        - name: Building Phantom
          ansible.builtin.command: >
            ./setup build --clean --test
          args:
            chdir: "{{ phantom_clone_dir }}"
          register: build
          become: no
        
        - debug: msg="{{ build.stdout}}"
        - debug: msg="{{ build.stderr}}"
        - name: Running Phantom tests
          ansible.builtin.command: >
            ./setup test
          args:
            chdir: "{{phantom_clone_dir}}"
          register: testing
          become: no
        
        - debug: msg="{{ testing.stdout}}"
        - debug: msg="{{ testing.stderr}}"

        - name: Installing Phantom
          ansible.builtin.command: >
            ./setup install
          args:
            chdir: "{{ phantom_clone_dir }}"
          register: installation
          become: no
        
        - debug: msg="{{ installation.stdout}}"
        - debug: msg="{{ installation.stderr}}"
        - name: Adding Phantom to PATH
          ansible.builtin.command: >
            bash -c 'echo 'export PATH="${PATH}:$HOME/.local/bin"' >> ~/.bashrc && source ~/.bashrc'

    - name: Installing HotStuff dependencies
      ansible.builtin.apt:
        pkg:
          - libssl-dev 
          - libuv1-dev 
          - libtool 
          - dh-autoreconf
          - libtool 
          - autoconf
        state: latest
    - name: Cloning Delphi-BFT
      ansible.builtin.git:
        repo: "{{ delphi_bft_repo }}"
        dest: "{{ delphi_bft_clone_dir }}"
        version: main
      become: no
    - name: Running npm install
      ansible.builtin.command: npm install
      args:
        chdir: "{{ delphi_bft_clone_dir }}"
      become: no
      

